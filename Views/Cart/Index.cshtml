@model dagstore.Models.CartViewModel

@{
    ViewData["Title"] = "Sepetim";
}

<div class="container pt-5">
    <h2>Sepetim</h2>

    @if (Model.CartItems.Any())
    {
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>Ürün</th>
                        <th>Fiyat</th>
                        <th style="width: 150px;">Adet</th>
                        <th>Toplam</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.CartItems)
                    {
                        <tr>
                            <td>
                                <div class="d-flex align-items-center">
                                    @if (!string.IsNullOrEmpty(item.Product.ImageUrl))
                                    {
                                        <img src="@item.Product.ImageUrl" alt="@item.Product.Name" style="width: 50px; height: 50px; object-fit: cover;" class="me-3" />
                                    }
                                    <div>
                                        <h6 class="mb-0">@item.Product.Name</h6>
                                    </div>
                                </div>
                            </td>
                            <td>@item.UnitPrice.ToString("C2")</td>
                            <td>
                                <div class="input-group input-group-sm">
                                    <button class="btn btn-outline-secondary quantity-btn" type="button" data-action="decrease" data-product-id="@item.ProductId">-</button>
                                    <input type="number" class="form-control text-center quantity-input" value="@item.Quantity" min="1" data-product-id="@item.ProductId" style="width: 50px;" />
                                    <button class="btn btn-outline-secondary quantity-btn" type="button" data-action="increase" data-product-id="@item.ProductId">+</button>
                                </div>
                            </td>
                            <td class="item-total">@((item.UnitPrice * item.Quantity).ToString("C2"))</td>
                            <td>
                                <form asp-action="RemoveFromCart" method="post" style="display: inline;">
                                    <input type="hidden" name="productId" value="@item.ProductId" />
                                    <button type="submit" class="btn btn-danger btn-sm remove-from-cart">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="3" class="text-end"><strong>Toplam:</strong></td>
                        <td id="cart-total">@Model.TotalAmount.ToString("C2")</td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>
        </div>

        <div class="d-flex justify-content-end mt-3">
            <a asp-controller="Home" asp-action="Index" class="btn btn-secondary me-2">Alışverişe Devam Et</a>
            <a asp-controller="Order" asp-action="Checkout" class="btn btn-primary">Siparişi Tamamla</a>
        </div>
    }
    else
    {
        <div class="alert alert-info">
            Sepetinizde ürün bulunmamaktadır.
            <a asp-controller="Home" asp-action="Index" class="alert-link">Alışverişe başlayın</a>.
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.quantity-btn').click(function () {
                const input = $(this).closest('.input-group').find('.quantity-input');
                const currentValue = parseInt(input.val());
                const action = $(this).data('action');
                
                if (action === 'increase') {
                    input.val(currentValue + 1).trigger('change');
                } else if (action === 'decrease' && currentValue > 1) {
                    input.val(currentValue - 1).trigger('change');
                }
            });

            $('.quantity-input').change(function () {
                const productId = $(this).data('product-id');
                const quantity = parseInt($(this).val());
                const row = $(this).closest('tr');

                if (quantity < 1) {
                    $(this).val(1);
                    return;
                }

                $.ajax({
                    url: '@Url.Action("UpdateQuantity", "Cart")',
                    type: 'POST',
                    data: { productId: productId, quantity: quantity },
                    success: function (response) {
                        if (response.success) {
                            row.find('.item-total').text(new Intl.NumberFormat('tr-TR', { style: 'currency', currency: 'TRY' }).format(response.itemTotal));
                            $('#cart-total').text(new Intl.NumberFormat('tr-TR', { style: 'currency', currency: 'TRY' }).format(response.totalAmount));
                            updateCartCount();
                        }
                    },
                    error: function () {
                        alert('Miktar güncellenirken bir hata oluştu.');
                    }
                });
            });

            $('.remove-from-cart').click(function() {
                setTimeout(function() {
                    updateCartCount();
                }, 100);
            });
        });
    </script>
} 